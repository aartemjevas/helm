apiVersion: batch/v1
kind: Job
metadata:
  name: postgres-init-database-{{ .Values.global.db.postgres_schema.version }}
  labels:
    app: {{ .Values.global.product }}
    tier: postgres-job
  annotations:
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  template:
    metadata:
      name: postgres-init-database
      labels:
        app: {{ .Values.global.product }}
        tier: postgres-job
    spec:
      {{- if .Values.global.db.bouncer_affinity }}
      affinity:
        {{ .Values.global.db.bouncer_affinity | toYaml | nindent 8 | trim }}
      {{- end }}
      restartPolicy: OnFailure
      containers:
        - image: "{{- if and (ne .Values.global.imageRegistry "") (ne .Values.global.imageRegistry "docker-hub.middleware.biz") }}{{ .Values.global.imageRegistry }}/{{- end}}{{ .Values.global.db.postgres_schema.image.registry }}/{{ if .Values.global.useCentos8 }}{{ .Values.global.centos8Repo }}/{{ else }}{{- if not (eq .Values.global.repotype "") }}{{ .Values.global.repotype }}/{{- end }}{{ end }}{{ .Values.global.db.postgres_schema.image.repository }}:{{ .Values.global.db.postgres_schema.version }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy | default "IfNotPresent" }}
          name: postgres-initdb
          args:
            - /bin/sh
            - -c
            - /postgres-schema-versioner/run.sh;
          env:
            - name: SCHEMA_VERSION
              value: {{ .Values.global.db.postgres_schema.version }}
            - name: DB_RDS_KEY
              value: {{ .Values.global.db.postgres_schema.db_schema_rds | quote }}
            - name: SHARD_COUNT
              value: '{{ .Values.global.db.shards_count }}'
            - name: POSTGRES_DBHOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbhost
            - name: POSTGRES_DBPORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbport
            - name: POSTGRES_DBSUPERUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name}}-root
                  key: dbsuperuser
            - name: POSTGRES_DBSUPERUSERPWD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}-root
                  key: dbsuperuserpwd
            - name: POSTGRES_DBUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbuser
            - name: POSTGRES_DBPWD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbpwd
            - name: FDW_POSTGRES_DBUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbuser_fdw
            - name: FDW_POSTGRES_DBPWD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbpwd_fdw
{{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range $pullSecret := .Values.global.imagePullSecrets }}
        - name: {{ $pullSecret }}
      {{- end }}
{{- end }}

