apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  labels:
    app: {{ .Values.global.product }}
    tier: {{ .Values.appName }}
spec:
  selector:
    matchLabels:
      tier: {{ .Values.appName }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: {{ .Values.global.webadm.minReplicas }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/web-configmap-nginx.yaml") . | sha256sum }}
        checksum/config_site: {{ include (print $.Template.BasePath "/web-configmap-site.yaml") . | sha256sum }}
        prometheus.io/path: /metrics
        prometheus.io/port: "9113"
        prometheus.io/scrape: "true"
      labels:
        app: {{ .Values.global.product }}
        tier: {{ .Values.appName }}
    spec:
      {{ if .Values.global.webadm.affinity }}
      affinity:
        {{ .Values.global.webadm.affinity | toYaml | nindent 8 | trim }}
      {{- end}}
      containers:
        - name: {{ .Values.appName }}
          image: "{{- if and (ne .Values.global.imageRegistry "") (ne .Values.global.imageRegistry "docker-hub.middleware.biz") }}{{ .Values.global.imageRegistry }}/{{- end}}{{ .Values.image.registry }}/{{ if .Values.global.useCentos8 }}{{ .Values.global.repotype }}/{{ else }}{{- if not (eq .Values.global.repotype "") }}{{ .Values.global.repotype }}/{{- end }}{{ end }}{{ .Values.image.repository }}:{{ .Values.global.webadm.tag }}"
          envFrom:
            - configMapRef:
                name: timezone-config
          ports:
            - containerPort: 8080
          lifecycle:
            preStop:
              exec:
                #waiting for the pod to be removed from the service
                command: ["/bin/sleep","3"]
          volumeMounts:
            - name: web-config-nginx
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: web-config-site
              mountPath: /etc/nginx/conf.d/corezoid.conf
              subPath: corezoid.conf
            - name: web-config-logo
              mountPath: /app/logo/logo.svg
              subPath: logo.svg
            - name: web-config-logo
              mountPath: /app/logo/logo_auth.svg
              subPath: logo_auth.svg
            {{- if eq .Values.global.sa.enabled true }}
            {{- if .Values.global.sa.persistantVolumeClaimCreate }}
            - name: {{ .Values.appName }}-claim
              mountPath: {{ .Values.global.sa.persistantVolumeClaimShareDir }}
            {{- end }}
            {{- end }}
          resources:
            {{ .Values.global.webadm.resources | toYaml | indent 12 | trim }}
          readinessProbe:
            httpGet:
              path: /nginx_status
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /nginx_status
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          imagePullPolicy: {{ .Values.global.imagePullPolicy | default "IfNotPresent" }}
        - name: nginx-exporter
          # https://hub.docker.com/r/nginx/nginx-prometheus-exporter
          image: "{{- if and (ne .Values.global.imageRegistry "") (ne .Values.global.imageRegistry "docker-hub.middleware.biz") }}{{ .Values.global.imageRegistry }}/{{- end}}{{ .Values.nginxExporter.registry }}/{{ .Values.nginxExporter.repository }}:{{ .Values.nginxExporter.tag }}"
          resources:
            requests:
              cpu: 10m
              memory: 30Mi
          ports:
            - name: nginx-exp-port
              containerPort: 9113
          args:
            #A URI or unix domain socket path for scraping NGINX
            - -nginx.scrape-uri=http://localhost:8080/nginx_status
            #A number of retries the exporter will make on start to connect to the NGINX stub_status page
            - -nginx.retries=2
{{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range $pullSecret := .Values.global.imagePullSecrets }}
        - name: {{ $pullSecret }}
      {{- end }}
{{- end }}
      volumes:
        - name: web-config-nginx
          configMap:
            name: {{ .Values.appName }}-main
        - name: web-config-site
          configMap:
            name: {{ .Values.appName }}-site
        - name: web-config-logo
          configMap:
            name: {{ .Values.appName }}-config-logo
        {{- if eq .Values.global.sa.enabled true }}
        {{- if .Values.global.sa.persistantVolumeClaimCreate }}
        - name: {{ .Values.appName }}-claim
          persistentVolumeClaim:
            claimName: {{ .Values.global.sa.persistantVolumeClaimName }}
            readOnly: false
        {{- end }}
        {{- end }}