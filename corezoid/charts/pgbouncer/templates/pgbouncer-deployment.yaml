{{- if .Values.global.db.bouncer }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-deployment
  labels:
    app: {{ .Values.global.product }}
    tier: {{ .Values.appName }}
spec:
  replicas: {{ .Values.global.db.bouncer_minReplicas }}
  selector:
    matchLabels:
      tier: {{ .Values.appName }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.global.db.bouncer_minReplicas }}
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9127"
        prometheus.io/scrape: "true"
      labels:
        app: {{ .Values.global.product }}
        tier: {{ .Values.appName}}
    spec:
      containers:
        - name: {{ .Values.appName }}
          image: "{{ .Values.image.registry }}/{{ .Values.global.repotype}}{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbuser
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbpwd
            - name: STATS_USERS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbuser
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbhost
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbport
            - name: IGNORE_STARTUP_PARAMETERS
              value: "extra_float_digits"
            - name: DB_NAME
              value: "*"
            - name: MAX_USER_CONNECTIONS
              value: {{ .Values.global.db.maxUserConnections | quote }}
            - name: MAX_DB_CONNECTIONS
              value: {{ .Values.global.db.maxDBConnections | quote }}
            - name: MAX_CLIENT_CONN
              value: {{ .Values.global.db.maxclientconn | quote }}
            - name: DEFAULT_POOL_SIZE
              value: {{ .Values.global.db.default_pool_size | quote }}
            - name: RESERVE_POOL_SIZE
              value: {{ .Values.global.db.reserve_pool_size | quote }}
            - name: POOL_MODE
              value: {{ .Values.global.db.default_pool_mode }}
            - name: RESERVE_POOL_TIMEOUT
              value: {{ .Values.global.db.reservePoolTimeout | quote }}
            - name: SERVER_IDLE_TIMEOUT
              value: {{ .Values.global.db.serverIdleTimeout | quote }}
            - name: SERVER_LIFETIME
              value: {{ .Values.global.db.serverLifetime | quote }}
            - name: SERVER_CONNECT_TIMEOUT
              value: {{ .Values.global.db.serverConnectTimeout | quote }}
            {{- $loglevel := .Values.global.log_level -}}
            {{- if eq $loglevel "debug" }}
            - name: VERBOSE
              value: "2"
            {{- end }}
          ports:
          - containerPort: 5432
          resources:
            {{ .Values.global.db.bouncer_resources | toYaml | indent 12 | trim }}
          readinessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
        - name: pgbouncer-exporter
          image: docker-hub.middleware.biz/public/prometheus-pgbouncer-exporter:2.1.1-python3.7.13-alpine3.15
          env:
            - name: PGBOUNCER_EXPORTER_HOST
              value: 0.0.0.0
            - name: PGBOUNCER_EXPORTER_PORT
              value: "9127"
            - name: PGBOUNCER_HOST
              value: localhost
            - name: PGBOUNCER_PORT
              value: "5432"
            - name: PGBOUNCER_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbuser
            - name: PGBOUNCER_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbpwd
          ports:
          - containerPort: 9127
          resources:
            limits:
              cpu: "50m"
              memory: "50Mi"
            requests:
              cpu: "50m"
              memory: "50Mi"
      {{- if not  (eq .Values.global.repotype "public") }}
      imagePullSecrets:
        - name: corezoid-secret
      {{- end }}
      {{ if .Values.global.db.bouncer_affinity }}
      affinity:
        {{ .Values.global.db.bouncer_affinity | toYaml | nindent 8 | trim }}
      {{- end}}
{{- end }}
